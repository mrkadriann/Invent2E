@model IEnumerable<InventoryManagement.Models.Supplier>

@{
    ViewData["Title"] = "Suppliers";
}
<link rel="stylesheet" href="~/css/supplier.css" asp-append-version="true" />

<div class="suppliers-container">
    <div class="suppliers-actions-row">
        <div class="suppliers-title">
            <h1>@ViewData["Title"]</h1>
        </div>
        <div class="search-container" style="flex-grow: 1;">
            <i class="material-icons search-icon">search</i>
            <input type="text" id="topSearchInput"
                   class="form-control search-input"
                   placeholder="Search Company, Email, Phone, Address..."
                   value="@ViewData["CurrentTopSearch"]">
        </div>
        <a asp-controller="Supplier" asp-action="Create" class="btn btn-success add-supplier-btn">
            <i class="material-icons">add</i> Add Supplier
        </a>
    </div>

    <hr />

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="suppliers-content">
        <form asp-controller="Suppliers" asp-action="Index" method="get" class="suppliers-sidebar">
            <input type="hidden" name="sortOrder" value="@ViewData["CurrentSort"]" />
            <input type="hidden" name="searchString" value="@ViewData["CurrentFilter"]" id="hiddenSearchStringForForm" />


            <div class="filter-section">
                <h3>FILTER BY LOCATION</h3>
                <div class="select-container">
                    <select name="locationFilter" asp-items="ViewBag.Locations" class="form-select">
                        <option value="">All Locations</option>
                    </select>
                </div>
            </div>

            <div class="filter-section">
                <h3>FILTER BY STATUS</h3>
                <div class="filter-status-buttons">
                    <select name="statusFilter" class="form-select">
                        <option value="">All Statuses</option>
                        <option value="Active" selected="@(ViewData["CurrentStatusFilter"] as string == "Active")">Active</option>
                        <option value="Inactive" selected="@(ViewData["CurrentStatusFilter"] as string == "Inactive")">Inactive</option>
                    </select>
                </div>
            </div>

            <button type="submit" class="btn btn-primary w-100 mt-3">Apply Filters</button>
            <a asp-action="Index" asp-controller="Suppliers" class="btn btn-outline-secondary w-100 mt-2">
                <i class="material-icons">refresh</i> Reset All
            </a>
        </form>

        <div class="suppliers-main">
            @if (!Model.Any())
            {
                <div class="alert alert-info mt-3" style="margin: 20px;">
                    No suppliers found matching your criteria.
                    @if (!string.IsNullOrEmpty(ViewData["CurrentFilter"] as string) ||
                   !string.IsNullOrEmpty(ViewData["CurrentLocationFilter"] as string) ||
                   !string.IsNullOrEmpty(ViewData["CurrentStatusFilter"] as string))
                    {
                        <span>Try <a asp-action="Index" asp-controller="Suppliers">clearing the filters</a>.</span>
                    }
                </div>
            }
            else
            {
                <div class="supplier-list">
                    @foreach (var supplier in Model)
                    {
                        <div class="supplier-card" data-supplier-id="@supplier.SupplierId" style="cursor: pointer;">
                            <div class="supplier-card-main-info">
                                <div class="supplier-avatar-image-container">
                                    @if (supplier.ProfileImage != null && supplier.ProfileImage.Length > 0)
                                    {
                                        <img src="@Url.Action("GetSupplierImage", "Supplier", new { id = supplier.SupplierId })"
                                             alt="@supplier.CompanyName Profile" class="supplier-profile-img"
                                             onerror="this.onerror=null; this.src='/images/placeholder-supplier.png';" />
                                    }
                                    else
                                    {
                                        string avatarInitial = !string.IsNullOrEmpty(supplier.CompanyName) ? supplier.CompanyName.Substring(0, 1).ToUpper() : "S";
                                        string avatarColor = GetAvatarColor(avatarInitial);
                                        <div class="supplier-avatar-initials" style="background-color: @avatarColor;">@avatarInitial</div>
                                    }
                                </div>
                                <div class="supplier-details">
                                    <h3 class="supplier-name">@supplier.CompanyName</h3>
                                    <p class="supplier-subname">@supplier.PersonName</p>
                                </div>
                                <div class="supplier-contacts">
                                    @if (!string.IsNullOrEmpty(supplier.Email))
                                    {
                                        <div class="contact-item">
                                            <i class="material-icons">email</i>
                                            <span>@supplier.Email</span>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(supplier.PhoneNumber))
                                    {
                                        <div class="contact-item">
                                            <i class="material-icons">phone</i>
                                            <span>@supplier.PhoneNumber</span>
                                        </div>
                                    }
                                </div>
                                <div class="supplier-payables">
                                    @* <span class="payables-label">PAYABLES</span>
                                    <span class="payables-amount">@supplier.TotalPayables?.ToString("C")</span> *@
                                </div>
                                <div class="dropdown">
                                    <button class="more-options-btn-supplier dropdown-toggle" type="button" id="dropdownMenuButton_@supplier.SupplierId" data-bs-toggle="dropdown" aria-expanded="false" onclick="event.stopPropagation();">
                                        <i class="material-icons">more_horiz</i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton_@supplier.SupplierId">
                                        <li><a class="dropdown-item" asp-action="Edit" asp-controller="Suppliers" asp-route-id="@supplier.SupplierId">Edit</a></li>
                                        <li><a class="dropdown-item" asp-action="Details" asp-controller="Suppliers" asp-route-id="@supplier.SupplierId">Full Details Page</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item text-danger" asp-action="Delete" asp-controller="Suppliers" asp-route-id="@supplier.SupplierId">Delete</a></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="supplier-card-secondary-info">
                                @if (!string.IsNullOrEmpty(supplier.Address))
                                {
                                    <div class="supplier-address">
                                        <i class="material-icons">location_on</i>
                                        <span>@supplier.Address</span>
                                    </div>
                                }
                                <div class="supplier-product-count">
                                    <i class="material-icons">inventory_2</i>
                                    <span>@(supplier.Products?.Count ?? 0) Product(s)</span>
                                </div>
                                @if (!string.IsNullOrEmpty(supplier.PortalStatus))
                                {
                                    <div class="supplier-portal-status">
                                        <span class="portal-status-label">PORTAL STATUS:</span>
                                        <span class="status-badge status-@(supplier.PortalStatus.ToLower())">@supplier.PortalStatus</span>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="supplierDetailModal" tabindex="-1" aria-labelledby="supplierDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" id="supplierDetailModalContent" style="background-color: transparent; border: none;">
            <div class="d-flex justify-content-center align-items-center" style="height: 300px; background-color: var(--dark-bg); border-radius: 12px;">
                <div class="spinner-border text-light" style="width: 3rem; height: 3rem;" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetAvatarColor(string initial)
    {
        if (string.IsNullOrEmpty(initial)) return "#cccccc";
        int charCode = (int)initial[0];
        var colors = new[] { "#8b5cf6", "#3b82f6", "#10b981", "#f59e0b", "#ef4444", "#6366f1", "#ec4899", "#f43f5e" };
        return colors[charCode % colors.Length];
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#topSearchInput').on('input change', function () {
                $('#hiddenSearchStringForForm').val($(this).val());
            });

            $('.suppliers-sidebar').on('submit', function() {
                $('#hiddenSearchStringForForm').val($('#topSearchInput').val());
                $(this).find('select, input[type="number"]').each(function() {
                    if (!$(this).val()) {
                        $(this).attr('name', '');
                    }
                });
            });

            $('#topSearchInput').on('keypress', function(e) {
                if (e.which == 13) {
                    e.preventDefault();
                    $('#hiddenSearchStringForForm').val($(this).val());
                    $('.suppliers-sidebar').submit();
                }
            });

            $('.supplier-card').on('click', function (e) {
                if ($(e.target).closest('.dropdown').length > 0) {
                    return;
                }

                var supplierId = $(this).data('supplier-id');
                var modalContent = $('#supplierDetailModalContent');
                var supplierModal = new bootstrap.Modal(document.getElementById('supplierDetailModal'));

                modalContent.html('<div class="d-flex justify-content-center align-items-center" style="height: 300px; background-color: var(--dark-bg); border-radius: 12px;"><div class="spinner-border text-light" style="width: 3rem; height: 3rem;" role="status"><span class="visually-hidden">Loading...</span></div></div>');
                supplierModal.show();

                $.ajax({
                    url: '@Url.Action("GetSupplierDetailsPartial", "Supplier")/' + supplierId,
                    type: 'GET',
                    success: function (result) {
                        modalContent.html(result);
                    },
                    error: function (xhr, status, error) {
                        modalContent.html('<div class="p-4" style="background-color: var(--dark-bg); border-radius: 12px; color: var(--danger);">Error loading supplier details. Please try again. (' + xhr.status + ' ' + error + ')</div>');
                        console.error("Error loading supplier details:", status, error, xhr);
                    }
                });
            });
            // For Bootstrap 5 alert dismissal
            var alertList = document.querySelectorAll('.alert');
            alertList.forEach(function (alert) {
                new bootstrap.Alert(alert);
            });
        });
    </script>
}