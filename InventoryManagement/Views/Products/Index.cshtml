@model InventoryManagement.Models.ProductViewModel
@{
    ViewData["Title"] = "Products";
}

<div class="products-container">
    <div class="products-actions-row">
        <div class="products-title">
            <h1>Products <span class="product-count">@Model.TotalProducts total products</span></h1>
        </div>
        <div class="search-container">
            <i class="material-icons search-icon">search</i>
            <input type="text" class="form-control search-input" placeholder="Search Product here">
        </div>
        <button class="btn btn-success add-product-btn" onclick="window.location='@Url.Action("Add", "Products")'">
            <i class="material-icons">add</i> Add Product
        </button>
    </div>

    <div class="products-content">
        <form asp-action="Index" method="get" class="products-sidebar">
            <div class="filter-section">
                <h3>SORT BY:</h3>
                <div class="select-container">
                    <select name="sortBy" class="form-select" onchange="this.form.submit()" >
                        <option value="NameAsc" selected="@(Model.SortBy == "NameAsc")">Alphabetical: A-Z</option>
                        <option value="NameDesc" selected="@(Model.SortBy == "NameDesc")">Alphabetical: Z-A</option>
                        <option value="PriceAsc" selected="@(Model.SortBy == "PriceAsc")">Price: Low to High</option>
                        <option value="PriceDesc" selected="@(Model.SortBy == "PriceDesc")">Price: High to Low</option>
                        <option value="StockAsc" selected="@(Model.SortBy == "StockAsc")">Stock: Low to High</option>
                        <option value="StockDesc" selected="@(Model.SortBy == "StockDesc")">Stock: High to Low</option>
                    </select>
                </div>
            </div>

            <div class="filter-section">
                <h3>STOCKS:</h3>
                <div class="select-container">
                    <select name="stockStatus" class="form-select" onchange="this.form.submit()">

                        <option value="all" selected="@(Model.StockStatus == "all" || string.IsNullOrEmpty(Model.StockStatus))">All Stocks</option>
                        <option value="low" selected="@(Model.StockStatus == "low")">Low Stock</option>
                        <option value="danger" selected="@(Model.StockStatus == "danger")">Very Low/Out</option>
                        <option value="normal" selected="@(Model.StockStatus == "normal")">Normal</option>
                        <option value="overstocked" selected="@(Model.StockStatus == "overstocked")">Overstocked</option>
                    </select>
                </div>
            </div>

            <div class="filter-section">
                <h3>CATEGORY:</h3>
                <div class="select-container">
                    <select name="category" class="form-select" onchange="this.form.submit()">
                        <option value="All" selected="@(Model.Category == "All" || string.IsNullOrEmpty(Model.Category))">All Categories</option>
                        @foreach (var cat in Model.AvailableCategories)
                        {
                            <option value="@cat" selected="@(Model.Category == cat)">@cat</option>
                        }
                    </select>
                </div>
            </div>

            <div class="filter-section">
                <h3>PRICE:</h3>
                <div class="price-inputs">
                    <div class="input-group">
                        <span class="input-group-text">₱</span>
                        <input type="number" name="minPrice" class="form-control" placeholder="Minimum Price" value="@Model.MinPrice" step="any">
                    </div>
                    <div class="input-group mt-2">
                        <span class="input-group-text">₱</span>
                        <input type="number" name="maxPrice" class="form-control" placeholder="Maximum Price" value="@Model.MaxPrice" step="any">

                        <button type="submit" class="btn btn-outline-secondary w-100 mt-2">
                            <i class="material-icons">check</i> Apply Price
                        </button>
                    </div>
                </div>
            </div>



            <a asp-action="Index" class="btn btn-outline-secondary w-100 mt-3">
                <i class="material-icons">refresh</i> Reset Filters
            </a>
        </form>

        <div class="products-main">

            @if (!Model.Products.Any())
            {
                <div class="alert alert-warning text-center" role="alert">
                    No products found matching your criteria. Try adjusting the filters.
                </div>
            }
            else
            {
            <div class="products-grid">
                @foreach (var product in Model.Products)
                {
                    <div class="product-card">
                        <div class="product-image">
                            <img src="@product.ImageUrl" alt="@product.Name">
                            <button class="more-options-btn">
                                <i class="material-icons">more_horiz</i>
                            </button>
                        </div>
                        <div class="product-info">
                            <h3 class="product-name">@product.Name</h3>
                            <p class="product-category">@product.Category</p>
                            <div class="product-stock">
                                <i class="material-icons">inventory_2</i>
                                <span>Stock: @product.Stock in stocks</span>
                                <span class="stock-status @product.StockStatus">@product.StockStatus</span>
                            </div>
                            <div class="product-price">
                                <span>PRICE:</span>
                                <span class="price">₱ @product.Price.ToString("N0")</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
            }
        </div>
    </div>
</div>